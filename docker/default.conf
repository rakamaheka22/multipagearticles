server {
  listen 8080;
  server_name localhost;

  # Add stdout logging
  error_log /dev/stdout;
  access_log /dev/stdout main;

  root /var/www/html/public;
  index index.php;
  charset utf-8;

  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
  add_header Content-Security-Policy "
    default-src 'self'
      data:;
    style-src 'self' 'unsafe-inline'
      https://fonts.googleapis.com
      https://cdn.jsdelivr.net;
    img-src 'self'
      *
      data:
      blob:;
    font-src 'self'
      data:
      https://fonts.gstatic.com;
    script-src 'self' 'unsafe-inline' 'unsafe-eval'
      https://cdn.jsdelivr.net
      https://cdnjs.cloudflare.com
      https://www.googletagmanager.com
      https://www.google-analytics.com;
    connect-src 'self'
      https://www.google-analytics.com
      https://stats.g.doubleclick.net;
    upgrade-insecure-requests";

  location / {
    try_files $uri $uri /index.php?$query_string;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
  }
  
  # cache.appcache, your document html and data
  location ~* \.(?:manifest|appcache|html?|xml|json)$ {
    expires -1;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
  }

  # Media: images, icons cache
  location ~* \.(?:ico|gif|jpe?g|png|webp|svg)$ {
    expires 3M;
    access_log off;
    log_not_found off;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  # Fonts cache
  location ~* \.(?:eot|woff|woff2|ttf|otf) {
    expires 3M;
    access_log  off;
    log_not_found off;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  # CSS and Javascript cache
  location ~* \.(?:css|js)$ {
    expires 1y;
    access_log off;
    log_not_found off;
    add_header Cache-Control "no-cache, public, must-revalidate, proxy-revalidate";
  }

  location = /favicon.ico { access_log off; log_not_found off; }
  location = /robots.txt  { access_log off; log_not_found off; }


  location ~ \.php$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    if (!-f $document_root$fastcgi_script_name) {
      return 404;
    }
    fastcgi_pass unix:/tmp/php-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
  }

  location ~ /\. {
    log_not_found off;
    deny all;
  }
}
